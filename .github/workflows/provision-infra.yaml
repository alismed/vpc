name: Create VPC and Subnets

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'feature/*'

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Region from tfvars
        run: |
          export REGION=$(grep 'region' infra/terraform.tfvars | cut -d'"' -f2)
          echo "Region: $REGION"
          echo "REGION=$REGION" >> $GITHUB_ENV

      - name: Set up AWS Cli
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Get Description from Pull Request
        run: |
          export DESCRIPTION=$(echo "${{ github.event.pull_request.body }}")
          echo "Description: $DESCRIPTION"
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV

      - name: Get Bucket Name from tfvars
        run: |
            export VPC_NAME=$(grep 'resource "aws_vpc"' infra/main.tf | awk -F'"' '{print $4}')
                echo "VPC Name: $VPC_NAME"
                echo "VPC_NAME=$VPC_NAME" >> $GITHUB_ENV

      - name: Get Destroy VPC from tfvars
        run: |
          export DESTROY_INFRA=$(cat infra/terraform.tfvars | grep destroy_infra | cut -d'=' -f2 | tr -d '[:space:]')
          echo "Destroy infra: $DESTROY_INFRA"
          echo "DESTROY_INFRA=$DESTROY_INFRA" >> $GITHUB_ENV
 
      - name: Destroy VPC if variable is set
        if: ${{ env.DESTROY_INFRA == 'true' }}
        run: |
          cd infra
          terraform init
          terraform destroy -auto-approve

      - name: Create VPC if variable is not set
        if: ${{ env.DESTROY_INFRA != 'true' }}
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

      - name: Set PR msg
        run: |
          echo "MSG=O VPC ${{ env.VPC_NAME }} foi ${{ env.DESTROY_INFRA == 'true' && 'destruÃ­da' || 'criada' }} com sucesso!" >> $GITHUB_ENV

      - name: Add comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              issue_number: ${{ github.event.pull_request.number }},
              repo: context.repo.repo,
              body: `${{ env.MSG }}`
            })
